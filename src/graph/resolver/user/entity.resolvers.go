package resolver_user

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	graph_model "e-learning/src/graph/generated/model"
	generated_user "e-learning/src/graph/generated/user"
	"fmt"
)

// FindAttendanceByID is the resolver for the findAttendanceByID field.
func (r *entityResolver) FindAttendanceByID(ctx context.Context, id string) (*graph_model.Attendance, error) {
	panic(fmt.Errorf("not implemented: FindAttendanceByID - findAttendanceByID"))
}

// FindClassByID is the resolver for the findClassByID field.
func (r *entityResolver) FindClassByID(ctx context.Context, id string) (*graph_model.Class, error) {
	panic(fmt.Errorf("not implemented: FindClassByID - findClassByID"))
}

// FindSchedulesByID is the resolver for the findSchedulesByID field.
func (r *entityResolver) FindSchedulesByID(ctx context.Context, id string) (*graph_model.Schedules, error) {
	panic(fmt.Errorf("not implemented: FindSchedulesByID - findSchedulesByID"))
}

// FindTuitionByID is the resolver for the findTuitionByID field.
func (r *entityResolver) FindTuitionByID(ctx context.Context, id string) (*graph_model.Tuition, error) {
	panic(fmt.Errorf("not implemented: FindTuitionByID - findTuitionByID"))
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id string) (*graph_model.User, error) {
	panic(fmt.Errorf("not implemented: FindUserByID - findUserByID"))
}

// Entity returns generated_user.EntityResolver implementation.
func (r *Resolver) Entity() generated_user.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
