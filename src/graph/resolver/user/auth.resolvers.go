package resolver_user

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	model_account "e-learning/src/database/model/account"
	graph_model "e-learning/src/graph/generated/model"
	service_auth "e-learning/src/service/auth"
	"fmt"
)

// AuthLogin is the resolver for the authLogin field.
func (r *queryResolver) AuthLogin(ctx context.Context, userName string, password string) (*graph_model.AuthLoginResponse, error) {
	input := &service_auth.AuthLoginCommand{
		UserName: userName,
		Password: password,
	}

	accessToken, refreshToken, role, err := service_auth.AuthBasicLogin(ctx, input)
	if err != nil {
		return &graph_model.AuthLoginResponse{}, err
	}

	if role != model_account.RoleUser {
		return &graph_model.AuthLoginResponse{}, fmt.Errorf("permission denied")
	}

	return &graph_model.AuthLoginResponse{
		AccessToken:  accessToken,
		RefreshToken: refreshToken,
	}, nil
}
