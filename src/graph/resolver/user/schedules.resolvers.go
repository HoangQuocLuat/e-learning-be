package resolver_user

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	graph_model "e-learning/src/graph/generated/model"
	service_schedules "e-learning/src/service/schedules"
)

// Schedules is the resolver for the schedules field.
func (r *queryResolver) Schedules(ctx context.Context, userID string) ([]graph_model.Schedules, error) {
	input := &service_schedules.SchedulesByIDCommand{UserID: userID}
	result, err := service_schedules.SchedulesByClassID(ctx, input)
	if err != nil {
		return nil, err
	}
	var schedulesList []graph_model.Schedules
	for _, d := range result {
		schedulesList = append(schedulesList, graph_model.Schedules{
			ID:            d.ID,
			StartTime:     d.StartTime,
			EndTime:       d.EndTime,
			Description:   d.Description,
			DayOfWeek:     d.DayOfWeek,
			Day:           d.Day,
			SchedulesType: d.SchedulesType})
	}
	return schedulesList, nil
}
