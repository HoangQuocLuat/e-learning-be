package resolver_admin

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	graph_model "e-learning/src/graph/generated/model"
	"fmt"
)

// UserInforAdd is the resolver for the userInforAdd field.
func (r *mutationResolver) UserInforAdd(ctx context.Context, data *graph_model.UserInforAdd) (*graph_model.UserInfor, error) {
	panic(fmt.Errorf("not implemented: UserInforAdd - userInforAdd"))
}

// UserInforUpdate is the resolver for the userInforUpdate field.
func (r *mutationResolver) UserInforUpdate(ctx context.Context, data *graph_model.UserInforUpdate) (*graph_model.UserInfor, error) {
	panic(fmt.Errorf("not implemented: UserInforUpdate - userInforUpdate"))
}

// UserInforMe is the resolver for the userInforMe field.
func (r *queryResolver) UserInforMe(ctx context.Context) (*graph_model.UserInfor, error) {
	panic(fmt.Errorf("not implemented: UserInforMe - userInforMe"))
}

// UserInforPagination is the resolver for the userInforPagination field.
func (r *queryResolver) UserInforPagination(ctx context.Context, page int, limit int, orderBy *string, search map[string]interface{}) (*graph_model.UserInforPagination, error) {
	panic(fmt.Errorf("not implemented: UserInforPagination - userInforPagination"))
}
